{
  "name": "grunt-cmd-transport",
  "description": "Transport javascript into cmd.",
  "version": "0.4.2",
  "homepage": "https://github.com/spmjs/grunt-cmd-transport",
  "author": {
    "name": "Hsiaoming Yang",
    "email": "lepture@me.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/spmjs/grunt-cmd-transport.git"
  },
  "bugs": {
    "url": "https://github.com/spmjs/grunt-cmd-transport/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/spmjs/grunt-cmd-transport/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "clean-css": "~1.0.1",
    "cmd-util": "~0.3.5",
    "handlebars": "1.3.0",
    "uglify-js": "~2.2.5",
    "css": "~1.4.0"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-mocha-test": "~0.4.0",
    "should": "~1.2.2",
    "grunt-cli": "~0.1.9"
  },
  "keywords": [
    "gruntplugin"
  ],
  "readme": "# grunt-cmd-transport\r\n\r\n> Transport javascript into cmd.\r\n\r\n## Getting Started\r\n\r\nThis plugin requires Grunt `~0.4.1`\r\n\r\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-cmd-transport --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-cmd-transport');\r\n```\r\n\r\n## The \"transport\" task\r\n\r\n### Overview\r\n\r\nIn your project's Gruntfile, add a section named `cmd_transport` to the data object passed into `grunt.initConfig()`.\r\n\r\n```js\r\ngrunt.initConfig({\r\n  transport: {\r\n    options: {\r\n      // Task-specific options go here.\r\n    },\r\n    your_target: {\r\n      // Target-specific file lists and/or options go here.\r\n    },\r\n  },\r\n})\r\n```\r\n\r\n### Options\r\n\r\n#### options.paths\r\n\r\nType: `Array`\r\nDefault value: `['sea-modules']`\r\n\r\nWhere are the modules in the sea.\r\n\r\n#### options.idleading\r\n\r\nType: `String`\r\nDefault value: `\"\"`\r\n\r\nPrepend idleading to generate the id of the module.\r\n\r\n#### options.alias\r\n\r\nType: `Object`\r\nDefault value: `{}`\r\n\r\nAlias of modules, such as handlebars and importStyle id.\r\n\r\n#### options.debug\r\n\r\nType: `Boolean`\r\nDefault value: `true`\r\n\r\nCreate a debugfile or not.\r\n\r\n#### options.handlebars\r\n\r\n**deprecated**, use `options.alias` instead.\r\n\r\nType: `Object`\r\n\r\nOptions for handlebars compiler.\r\n\r\nConfigure handlebars ID:\r\n\r\n```js\r\noptions: {\r\n    handlebars: {\r\n        id: 'handlebars'\r\n    }\r\n}\r\n```\r\n\r\n#### options.uglify\r\n\r\nType: `Object`\r\n\r\nUglify prettifier, you really don't have to change this value.\r\n\r\n\r\n#### options.parsers\r\n\r\nTransport a specific filetype with the right parser.\r\n\r\nYou can write your own parsers, for example `coffeeParser`:\r\n\r\n```js\r\noptions: {\r\n    parsers: {\r\n        '.coffee': [coffeeParser]\r\n    }\r\n}\r\n```\r\n\r\nSorry for the missing documentation on how to write a parser.\r\n\r\n### Usage Examples\r\n\r\nGruntfile use default options.\r\n\r\n\r\n```js\r\ngrunt.initConfig({\r\n    transport: {\r\n        target_name: {\r\n            files: [{\r\n                cwd: 'src',\r\n                src: '**/*',\r\n                dest: 'dist'\r\n            }]\r\n        }\r\n    }\r\n});\r\n```\r\n\r\n## Contributing\r\n\r\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\r\n\r\n## Release History\r\n\r\n**Sep 1st, 2014** `0.4.2`\r\n\r\n- get `handlebars` and `importStyle` id in `options.alias`\r\n\r\n- set default css parser to `css2jsParser`\r\n\r\n- add `importStyle` template\r\n\r\n**Dec 4th, 2013** `0.4.0`\r\n\r\nfix Windows path #58\r\n\r\n**Oct 15th, 2013** `0.4.0`\r\n\r\n- delete hack for grunt file object #45 **not compatible**\r\n\r\n- resolve deps error if require file and folder with the same name #50\r\n\r\n**Sep 4th, 2013** `0.3.0`\r\n\r\nRemove styleBox id logic added in 0.2.12, now require outside css module do not adding to styleBox,\r\nthat resolve lots of bugs.\r\n\r\n**Sep 4th, 2013** `0.2.12`\r\n\r\nstyleBox css module should has styleBox id.\r\n\r\n**Oct 28st, 2013** `0.2.11`\r\n\r\nstylebox support array.\r\n\r\n**Oct 28st, 2013** `0.2.10`\r\n\r\nstylebox support :root selector\r\nsupport id/deps sepecified\r\ndon't resolve text!path/to/some.xx\r\n\r\n**Jul 1st, 2013** `0.2.9`\r\n\r\nfix deps duplicate\r\n\r\n**Jun 27th, 2013** `0.2.8`\r\n\r\n- improve parsing css\r\n- add testcase\r\n\r\n**Jun 26th, 2013** `0.2.7`\r\n\r\n- improve log\r\n- remove .js extname in dependencies\r\n- add styleBox option\r\n\r\n**Jun 19th, 2013** `0.2.6`\r\n\r\nShow parsing JS error log.\r\n\r\n**Jun 17th, 2013** `0.2.5`\r\n\r\nHandlebars ID configurable.\r\n\r\nBugfix for not showing JS parse error.\r\n\r\n**May 28th, 2013** `0.2.4`\r\n\r\nUse a specified version of Handlebars.\r\n\r\n**May 6th, 2013** `0.2.3\r\n\r\nDon't stop the process when the file not exists.\r\n\r\n**April 25th, 2013** `0.2.2`\r\n\r\nFix on filter id.\r\n\r\n**April 15th, 2013** `0.2.1`\r\n\r\nRestore tplParser.\r\n\r\n**April 11th, 2013** `0.2.0`\r\n\r\nChanged the option configuration.\r\n\r\n**April 10th, 2013** `0.1.3`\r\n\r\nUpgrade dependencies.\r\n\r\n**April 9th, 2013** `0.1.2`\r\n\r\nBugfix for parsing nested relative dependencies.\r\n\r\n**April 1st, 2013** `0.1.1`\r\n\r\nTemplate process on source data.\r\n\r\n**April 1st, 2013** `0.1.0`\r\n\r\nFirst version.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-cmd-transport@0.4.2",
  "dist": {
    "shasum": "c21b5fcefccb95713740261f6a3d6993c24ba824"
  },
  "_resolved": "git://github.com/crossjs/grunt-cmd-transport#d795e14b68710782ed2a7df39fdcd9cef77fed6d",
  "_from": "grunt-cmd-transport@git://github.com/crossjs/grunt-cmd-transport"
}
